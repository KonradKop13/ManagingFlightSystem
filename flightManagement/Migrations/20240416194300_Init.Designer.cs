// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using flightManagement.Entities;

#nullable disable

namespace flightManagement.Migrations
{
    [DbContext(typeof(MyBoardsContext))]
    [Migration("20240416194300_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("flightManagement.Entities.Arrival", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Arrivalss");
                });

            modelBuilder.Entity("flightManagement.Entities.Departure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DepurtureDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Departuress");
                });

            modelBuilder.Entity("flightManagement.Entities.ListOfFlights", b =>
                {
                    b.Property<Guid>("FlightNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArrivalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlaneId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FlightNumber");

                    b.HasIndex("ArrivalId")
                        .IsUnique();

                    b.HasIndex("DepartureId")
                        .IsUnique();

                    b.HasIndex("PlaneId")
                        .IsUnique();

                    b.ToTable("ListsOfFlight");
                });

            modelBuilder.Entity("flightManagement.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ArrivalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DepartureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalId")
                        .IsUnique();

                    b.HasIndex("DepartureId")
                        .IsUnique();

                    b.ToTable("Locationss");
                });

            modelBuilder.Entity("flightManagement.Entities.Plane", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlaneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Planess");
                });

            modelBuilder.Entity("flightManagement.Entities.ListOfFlights", b =>
                {
                    b.HasOne("flightManagement.Entities.Arrival", "Arrival")
                        .WithOne("ListOfFlights")
                        .HasForeignKey("flightManagement.Entities.ListOfFlights", "ArrivalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("flightManagement.Entities.Departure", "Departure")
                        .WithOne("ListOfFlights")
                        .HasForeignKey("flightManagement.Entities.ListOfFlights", "DepartureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("flightManagement.Entities.Plane", "Plane")
                        .WithOne("ListOfFlights")
                        .HasForeignKey("flightManagement.Entities.ListOfFlights", "PlaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arrival");

                    b.Navigation("Departure");

                    b.Navigation("Plane");
                });

            modelBuilder.Entity("flightManagement.Entities.Location", b =>
                {
                    b.HasOne("flightManagement.Entities.Arrival", "Arrival")
                        .WithOne("Location")
                        .HasForeignKey("flightManagement.Entities.Location", "ArrivalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("flightManagement.Entities.Departure", "Departure")
                        .WithOne("Location")
                        .HasForeignKey("flightManagement.Entities.Location", "DepartureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arrival");

                    b.Navigation("Departure");
                });

            modelBuilder.Entity("flightManagement.Entities.Arrival", b =>
                {
                    b.Navigation("ListOfFlights")
                        .IsRequired();

                    b.Navigation("Location")
                        .IsRequired();
                });

            modelBuilder.Entity("flightManagement.Entities.Departure", b =>
                {
                    b.Navigation("ListOfFlights")
                        .IsRequired();

                    b.Navigation("Location")
                        .IsRequired();
                });

            modelBuilder.Entity("flightManagement.Entities.Plane", b =>
                {
                    b.Navigation("ListOfFlights")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
